name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug - Check if secret is set
        run: |
          echo "✅ AZURE_BACKEND_URL secret is configured"
          echo "✅ Secret length: ${#AZURE_BACKEND_URL} characters"
          echo "✅ Secret starts with: ${AZURE_BACKEND_URL:0:8}..."
        env:
          AZURE_BACKEND_URL: ${{ secrets.AZURE_BACKEND_URL }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Prepare GitHub Pages HTML
        run: |
          # Verify source files exist
          if [ ! -f "index.html" ]; then
            echo "❌ index.html not found"
            exit 1
          fi

          if [ ! -f "index-github-pages.html" ]; then
            echo "❌ index-github-pages.html template not found"
            exit 1
          fi

          # Debug: Show file structure
          echo "📁 Current directory structure:"
          ls -la
          echo "🎨 CSS files:"
          find css/ -name "*.css" | head -5
          echo "🔧 JS files:"
          find js/ -name "*.js" | head -5

          # Extract body content from main index.html
          echo "📄 Extracting body content from index.html..."
          sed -n '/<body class="text-sm">/,/<\/body>/p' index.html | sed '1d;$d' > temp_body.html

          # Verify extraction worked
          if [ ! -f temp_body.html ] || [ ! -s temp_body.html ]; then
            echo "❌ Failed to extract body content or file is empty"
            echo "🔍 Trying alternative body pattern..."
            sed -n '/<body[^>]*>/,/<\/body>/p' index.html | sed '1d;$d' > temp_body.html
            
            if [ ! -s temp_body.html ]; then
              echo "❌ Still no body content found"
              echo "📋 First 20 lines of index.html for debugging:"
              head -20 index.html
              exit 1
            fi
          fi

          echo "✅ Body content extracted: $(wc -l < temp_body.html) lines"

          # Replace placeholder with backend URL
          echo "🔧 Processing GitHub Pages template..."
          sed "s|BACKEND_URL_PLACEHOLDER|${{ secrets.AZURE_BACKEND_URL }}|g" index-github-pages.html > temp_index.html

          # Verify replacement worked
          if grep -q "BACKEND_URL_PLACEHOLDER" temp_index.html; then
            echo "❌ Backend URL placeholder not replaced!"
            echo "🔍 Template content:"
            head -10 temp_index.html
            exit 1
          fi

          echo "✅ Backend URL replaced successfully"

          # Insert body content into template
          echo "📝 Inserting body content into template..."
          sed '/<\!-- Rest of your existing HTML content from index.html -->/r temp_body.html' temp_index.html > index.html

          # Remove placeholder comment
          sed -i '/<\!-- Rest of your existing HTML content from index.html -->/d' index.html

          # Clean up temporary files
          rm -f temp_body.html temp_index.html

          # Final verification
          echo "🔍 Final verification:"
          echo "- Backend URL configured: $(grep -c 'window.BACKEND_URL' index.html || echo 0)"
          echo "- CSS linked: $(grep -c 'css/main.css' index.html || echo 0)"
          echo "- Script modules: $(grep -c 'type="module"' index.html || echo 0)"

          # Debug: Show final file structure
          echo "📋 Final file sizes:"
          ls -lh index.html css/main.css js/script.js || echo "Some files missing"

        env:
          AZURE_BACKEND_URL: ${{ secrets.AZURE_BACKEND_URL }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "."

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
