name: Deploy to GitHub Pages

on:
  push:
    branches: [main]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug - Check if secret is set
        run: |
          echo "‚úÖ AZURE_BACKEND_URL secret is configured"
          echo "‚úÖ Secret length: ${#AZURE_BACKEND_URL} characters"
          echo "‚úÖ Secret starts with: ${AZURE_BACKEND_URL:0:8}..."
        env:
          AZURE_BACKEND_URL: ${{ secrets.AZURE_BACKEND_URL }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Prepare GitHub Pages HTML
        run: |
          # Debug: List all files
          echo "üìÅ Repository contents:"
          find . -type f -name "*.html" -o -name "*.css" -o -name "*.js" | head -20

          # Check if source files exist
          if [ ! -f "index.html" ]; then
            echo "‚ùå index.html not found"
            exit 1
          fi

          if [ ! -f "index-github-pages.html" ]; then
            echo "‚ùå index-github-pages.html not found"
            exit 1
          fi

          # Check CSS structure
          echo "üé® CSS files available:"
          find css/ -name "*.css" | head -10

          # Verify main.css exists
          if [ ! -f "css/main.css" ]; then
            echo "‚ùå css/main.css not found!"
            echo "Available CSS files:"
            ls -la css/
            exit 1
          fi

          # Extract body content from main index.html
          echo "üìÑ Extracting body content from index.html..."
          sed -n '/<body class="text-sm">/,/<\/body>/p' index.html | sed '1d;$d' > temp_body.html

          # Verify extraction worked
          if [ ! -f temp_body.html ] || [ ! -s temp_body.html ]; then
            echo "‚ùå Failed to extract body content or file is empty"
            echo "Trying alternative body tag pattern..."
            sed -n '/<body[^>]*>/,/<\/body>/p' index.html | sed '1d;$d' > temp_body.html
            
            if [ ! -s temp_body.html ]; then
              echo "‚ùå Still no body content found"
              echo "üîç Debugging: First 20 lines of index.html:"
              head -20 index.html
              exit 1
            fi
          fi

          echo "‚úÖ Body content extracted: $(wc -l < temp_body.html) lines"

          # Replace placeholder with the backend URL
          echo "üîß Processing GitHub Pages template..."
          sed "s|BACKEND_URL_PLACEHOLDER|${{ secrets.AZURE_BACKEND_URL }}|g" index-github-pages.html > temp_index.html

          # Verify replacement worked
          if grep -q "BACKEND_URL_PLACEHOLDER" temp_index.html; then
            echo "‚ùå Backend URL placeholder not replaced!"
            exit 1
          fi

          # Insert the body content into the GitHub Pages template
          echo "üìù Inserting body content into template..."
          sed '/<\!-- Rest of your existing HTML content from index.html -->/r temp_body.html' temp_index.html > index.html

          # Clean up temporary files
          echo "üßπ Cleaning up temporary files..."
          rm -f temp_body.html temp_index.html

          # Remove the placeholder comment
          sed -i '/<\!-- Rest of your existing HTML content from index.html -->/d' index.html

          # Final verification
          echo "üîç Final verification:"
          echo "- Backend URL configured: $(grep -c 'window.BACKEND_URL' index.html || echo 0)"
          echo "- CSS linked: $(grep -c 'css/main.css' index.html || echo 0)"
          echo "- Script modules: $(grep -c 'type="module"' index.html || echo 0)"

          # Show preview
          echo "üìã Generated index.html preview (first 30 lines):"
          head -30 index.html
        env:
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
          GITHUB_REPOSITORY: ${{ github.repository }}

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "."

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
